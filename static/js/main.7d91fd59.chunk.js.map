{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAAe,I,kBCGFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,mCAAML,EAAMG,QAAQG,KAApB,OACA,4BAAKN,EAAMG,QAAQI,YCHdC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAyBA,QAASA,GAArBA,EAAQC,UCLpBO,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIC,KAAK,SACLb,UAAU,SACVW,YAAcA,EACdG,SAAWF,MC0CJG,E,kDAzCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJH,E,qDAWd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAG7C,WAAU,IAAD,SAG2BE,KAAKR,MAA/BR,EAHD,EAGCA,SAAUS,EAHX,EAGWA,YACZQ,EAAmBjB,EAASkB,QAAQ,SAAAxB,GAAO,OAC/CA,EAAQG,KAAKsB,cAAcC,SAASX,EAAYU,kBAMlD,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAgB,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUvB,SAAYiB,W,GArCZO,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7d91fd59.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n        <h2> {props.monster.name} </h2>\r\n        <p>{ props.monster.email }</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport './card-list.style.css';\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = (props) => {  \r\n    return (\r\n        <div className='card-list'>\r\n        {props.monsters.map(monster =>( \r\n            <Card key = {monster.id} monster={monster}/>\r\n        ))\r\n        }\r\n        </div>\r\n    )\r\n} ","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n        type='search'\r\n        className='search' \r\n        placeholder={ placeholder } \r\n        onChange={ handleChange } \r\n    />\r\n)","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { CardList } from './components/card-list/card-list.component'\nimport './App.css';\nimport reactDom from 'react-dom';\nimport { SearchBox, searchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  // This is used to fetch data when the page loads for first time. We fetch\n  // the information of different monsters in form of Json from an online source. \n  // So, internet connection required to load this information.\n  componentDidMount() {          \n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users}));\n  }\n  \n  render() {\n    // The next few lines of code does the Search Function and looks for the \n    // monsters whose names match with the string typed in the search box\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter( monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    // This chunch of code is the main code that is displayed on the main\n    // screen. We fetch information from different files and assemble them here \n    // to get a complete file. This complete file is sent to index.html\n    return(\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='Search monsters'\n          handleChange = {e => this.setState({ searchField: e.target.value })}\n        />\n        <CardList monsters = {filteredMonsters}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}